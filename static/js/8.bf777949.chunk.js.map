{"version":3,"sources":["component/postadd/Postadd.js"],"names":["Postadd","state","isEdit","postForm","title","body","handleValue","event","Object","C_Users_shanky_Desktop_opifex_Post_App_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_this","C_Users_shanky_Desktop_opifex_Post_App_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","name","value","setState","handleSubmit","preventDefault","id","props","match","params","axios","put","then","res","editPost","data","history","push","toastr","success","catch","error","post","addPost","_this2","this","path","split","get","_this3","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","style","textAlign","className","width","margin","onSubmit","onChange","type","height","Component","withRouter","connect","dispatch","bindActionCreators","actionCreator"],"mappings":"qQAUMA,qNAEJC,MAAQ,CACNC,QAAO,EACPC,SAAS,CACPC,MAAM,GACNC,KAAK,OAyBTC,YAAc,SAACC,GACb,IAAIF,EAAIG,OAAAC,EAAA,EAAAD,CAAA,GACHE,EAAKT,MAAME,SADRK,OAAAG,EAAA,EAAAH,CAAA,GAELD,EAAMK,OAAOC,KAAMN,EAAMK,OAAOE,QAEnCJ,EAAKK,SAAS,CAACZ,SAASE,OAG1BW,aAAe,SAACT,GACdA,EAAMU,iBACN,IAAIC,EAAKR,EAAKS,MAAMC,MAAMC,OAAOH,GAE7BR,EAAKT,MAAMC,OAUboB,IAAMC,IAAI,6CAA+CL,EAAIR,EAAKT,MAAME,UACxEqB,KAAK,SAACC,GACLf,EAAKS,MAAMO,SAASD,EAAIE,MACxBjB,EAAKS,MAAMS,QAAQC,KAAK,UACxBC,IAAOC,QAAQ,mBACdC,MAAM,WACPF,IAAOG,MAAM,uBAfdX,IAAMY,KAAK,4CAA4CxB,EAAKT,MAAME,UAClEqB,KAAK,SAACC,GACLf,EAAKS,MAAMgB,QAAQV,EAAIE,MACvBjB,EAAKS,MAAMS,QAAQC,KAAK,UACxBC,IAAOC,QAAQ,kBACdC,MAAM,WACPF,IAAOG,MAAM,0GAxCD,IAAAG,EAAAC,KACXC,EAAOD,KAAKlB,MAAMC,MAAMkB,KAEhB,eADZA,EAAOA,EAAKC,MAAM,KAAK,KAEnBF,KAAKtB,SAAS,CAACb,QAAO,IAGd,cAAToC,GACChB,IAAMkB,IAAI,8CAAgDH,KAAKlB,MAAMC,MAAMC,OAAOH,IACjFM,KAAK,SAACC,GACHW,EAAKjB,MAAMO,SAASD,EAAIE,MACxB,IAAItB,EAAO,CACTD,MAAMqB,EAAIE,KAAKvB,MACfC,KAAKoB,EAAIE,KAAKtB,MAEhB+B,EAAKrB,SAAS,CAACZ,SAASE,uCAwC1B,IAAAoC,EAAAJ,KAMN,OACEK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACC,UAAU,WAAaT,KAAKpC,MAAMC,OAAU,YAAc,YACtEwC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UAAUF,MATjB,CACVG,MAAM,MACNC,OAAO,cAQCP,EAAAC,EAAAC,cAAA,QAAMM,SAAU,SAAC3C,GAAD,OAAWkC,EAAKzB,aAAaT,KACvCmC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,sBACEF,EAAAC,EAAAC,cAAA,SAAO9B,MAAOuB,KAAKpC,MAAME,SAASC,MAAO+C,SAAU,SAAC5C,GAAD,OAAWkC,EAAKnC,YAAYC,IAAQM,KAAK,QAAQkC,UAAU,eAAeK,KAAK,UAEtIV,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAAUC,MAAO,CAACQ,OAAO,QAASxC,KAAK,OAAOC,MAAOuB,KAAKpC,MAAME,SAASE,KAAM8C,SAAU,SAAC5C,GAAD,OAAWkC,EAAKnC,YAAYC,IAAQwC,UAAU,kBAEzIL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,UAAU,kBAAkBK,KAAK,UAAzC,sBAtFAE,cAgHPC,sBAAWC,YAbF,SAACvD,GACvB,MAAO,CACLiC,KAAKjC,EAAMyB,WAIY,SAAC+B,GAC1B,OAAOC,YAAmB,CACtBvB,QAAQ,SAACD,GAAD,OAAUuB,EAASE,IAAsBzB,KACjDR,SAAS,SAACQ,GAAD,OAAUuB,EAASE,IAAuBzB,MACrDuB,IAGsBD,CAA6CxD","file":"static/js/8.bf777949.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { bindActionCreators } from '../../../node_modules/redux';\r\nimport * as actionCreator from './../../store/actionscreators/actionCreators';\r\nimport toastr from 'toastr'\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Postadd.css'\r\n\r\n\r\nclass Postadd extends Component {\r\n\r\n  state = {\r\n    isEdit:false,\r\n    postForm:{\r\n      title:'',\r\n      body:''\r\n    }\r\n  }\r\n\r\ncomponentDidMount(){\r\n    let path = this.props.match.path\r\n    path = path.split('/')[1]\r\n    if(path === \"edit-post\"){\r\n        this.setState({isEdit:true})\r\n    }\r\n\r\n    if(path === \"edit-post\") {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts/\" + this.props.match.params.id)\r\n        .then((res) => {\r\n            this.props.editPost(res.data)\r\n            let body = {\r\n              title:res.data.title,\r\n              body:res.data.body\r\n            }\r\n            this.setState({postForm:body})\r\n        })\r\n    }\r\n}\r\n\r\n\r\n  handleValue = (event) => {\r\n    let body = {\r\n      ...this.state.postForm,\r\n      [event.target.name]:event.target.value\r\n    }\r\n    this.setState({postForm:body})\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    let id = this.props.match.params.id\r\n    \r\n    if(!this.state.isEdit){\r\n      axios.post(\"http://jsonplaceholder.typicode.com/posts\",this.state.postForm)\r\n     .then((res) => {\r\n       this.props.addPost(res.data)\r\n       this.props.history.push('/posts')\r\n       toastr.success(\"Post Added!!\")\r\n     }).catch(() => {\r\n       toastr.error(\"Post Not Added!!\")\r\n     })\r\n    } else {\r\n      axios.put(\"http://jsonplaceholder.typicode.com/posts/\" + id ,this.state.postForm)\r\n     .then((res) => {\r\n       this.props.editPost(res.data)\r\n       this.props.history.push('/posts')\r\n       toastr.success(\"Post Edited!!\")\r\n     }).catch(() => {\r\n       toastr.error(\"Post Not Edited!!\")\r\n     })\r\n    }\r\n    \r\n  }\r\n\r\n  render(){\r\n    let style = {\r\n      width:'50%',\r\n      margin:'50px auto'\r\n    }\r\n\r\n    return (\r\n      <div>\r\n      <h1 style={{textAlign:'center'}}>{(this.state.isEdit) ? 'Edit Post' : 'Add Post'}</h1>\r\n      <div className=\"add-container\">\r\n        <div className=\"add-row\" style={style}>\r\n              <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                    <div className=\"form-group\">\r\n                      <label>Title</label>\r\n                        <input value={this.state.postForm.title} onChange={(event) => this.handleValue(event)} name=\"title\" className=\"form-control\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Body</label>\r\n                      <textarea style={{height:'12em'}} name=\"body\" value={this.state.postForm.body} onChange={(event) => this.handleValue(event)} className=\"form-control\"></textarea>\r\n                    </div>\r\n                    <div>\r\n                      <button className=\"btn btn-success\" type=\"submit\" >\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n            </form>\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    post:state.editPost\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n      addPost:(post) => dispatch(actionCreator.addPost(post)),\r\n      editPost:(post) => dispatch(actionCreator.editPost(post))\r\n  },dispatch)\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps) (Postadd));"],"sourceRoot":""}