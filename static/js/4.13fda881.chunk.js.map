{"version":3,"sources":["component/spinner/Spinner.js","component/comment/comment.js","container/comments/comments.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_loader_spinner__WEBPACK_IMPORTED_MODULE_1__","react_loader_spinner__WEBPACK_IMPORTED_MODULE_1___default","Spinner","a","createElement","type","color","height","width","Comment","props","react_default","id","name","email","body","Comments","state","postId","_this2","this","match","params","axios","get","then","res","getComments","data","setState","comments","getCommentsPerPost","map","el","comment_comment","Object","assign","key","style","textAlign","margin","className","Component","connect","dispatch","bindActionCreators","actionCreators"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAgBeE,IAbC,WACZ,OACIJ,EAAAK,EAAAC,cAAA,WACIN,EAAAK,EAAAC,cAACH,EAAAE,EAAD,CACCE,KAAK,OACLC,MAAM,QACNC,OAAO,MACPC,MAAM,mMCKJC,UAXC,SAACC,GACb,OACQC,EAAAR,EAAAC,cAAA,UACIO,EAAAR,EAAAC,cAAA,UAAKM,EAAME,IACXD,EAAAR,EAAAC,cAAA,UAAKM,EAAMG,MACXF,EAAAR,EAAAC,cAAA,UAAKM,EAAMI,OACXH,EAAAR,EAAAC,cAAA,UAAKM,EAAMK,2BCErBC,6MACFC,MAAS,CACLC,OAAO,yFAGQ,IAAAC,EAAAC,KACXF,EAASE,KAAKV,MAAMW,MAAMC,OAAOV,GACrCW,IAAMC,IAAI,6CAAgDN,EAAS,aACjEO,KAAK,SAACC,GACHP,EAAKT,MAAMiB,YAAYD,EAAIE,QAE/BR,KAAKS,SAAS,CAACX,OAAOA,qCAIvB,IAAIY,EAAWnB,EAAAR,EAAAC,cAACF,EAAA,EAAD,MAOf,OALGkB,KAAKV,MAAMqB,qBACVD,EAAWV,KAAKV,MAAMqB,mBAAmBC,IAAI,SAACC,GAC1C,OAAOtB,EAAAR,EAAAC,cAAC8B,EAADC,OAAAC,OAAA,CAASC,IAAKJ,EAAGrB,IAAQqB,OAIpCtB,EAAAR,EAAAC,cAAA,WACIO,EAAAR,EAAAC,cAAA,MAAIkC,MAAO,CAACC,UAAW,SAASC,OAAQ,SAAxC,oBAAmEpB,KAAKH,MAAMC,QAC9EP,EAAAR,EAAAC,cAAA,SAAOI,MAAM,MAAMiC,UAAU,SAC7B9B,EAAAR,EAAAC,cAAA,SAAOqC,UAAU,SACb9B,EAAAR,EAAAC,cAAA,UACIO,EAAAR,EAAAC,cAAA,mBACAO,EAAAR,EAAAC,cAAA,kBACAO,EAAAR,EAAAC,cAAA,mBACAO,EAAAR,EAAAC,cAAA,oBAGRO,EAAAR,EAAAC,cAAA,aACK0B,YAnCEY,aAuDPC,sBAZQ,SAAC1B,GACrB,MAAO,CACHc,mBAAmBd,EAAMa,WAIN,SAACc,GACxB,OAAOC,YAAmB,CACtBlB,YAAY,SAACC,GAAD,OAAUgB,EAASE,IAA4BlB,MAC7DgB,IAGUD,CAA6C3B","file":"static/js/4.13fda881.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div>\r\n            <Loader \r\n             type=\"Oval\"\r\n             color=\"black\"\r\n             height=\"100\"\t\r\n             width=\"100\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './comment.css'\r\n\r\nconst Comment = (props) => {\r\n    return (\r\n            <tr>\r\n                <td>{props.id}</td>\r\n                <td>{props.name}</td>\r\n                <td>{props.email}</td>\r\n                <td>{props.body}</td>\r\n            </tr>\r\n    );\r\n};\r\n\r\nexport default Comment;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from '../../../node_modules/redux';\r\n\r\nimport * as actionCreators from './../../store/actionscreators/actionCreators'\r\nimport Comment from '../../component/comment/comment';\r\n\r\nimport './comments.css'\r\nimport Spinner from '../../component/spinner/Spinner';\r\n\r\nclass Comments extends Component {\r\n    state =  {\r\n        postId:null\r\n    }\r\n    \r\n    componentDidMount(){\r\n        let postId = this.props.match.params.id\r\n        axios.get(\"http://jsonplaceholder.typicode.com/posts/\" +  postId + \"/comments\")\r\n         .then((res) => {\r\n             this.props.getComments(res.data)\r\n         })\r\n         this.setState({postId:postId})\r\n    }\r\n\r\n    render() {\r\n        let comments = <Spinner />\r\n\r\n        if(this.props.getCommentsPerPost){\r\n            comments = this.props.getCommentsPerPost.map((el) => {\r\n                return <Comment key={el.id} {...el} />\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <h1 style={{textAlign: 'center',margin: '20px'}}>Comments of Post:{this.state.postId}</h1>\r\n                <table width=\"90%\" className=\"table\" >\r\n                <thead className=\"thead\">\r\n                    <tr>\r\n                        <th>Sr.No</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Body</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {comments}\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        getCommentsPerPost:state.comments\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        getComments:(data) => dispatch(actionCreators.loadComments(data))\r\n    },dispatch)\r\n}\r\n\r\nexport default  connect(mapStateToProps,mapDispatchToProps) (Comments);"],"sourceRoot":""}