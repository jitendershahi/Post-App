{"version":3,"sources":["component/navbar/navbar.js","container/ErrorBoundaries/ErrorBoundary .js","component/practiseForm/practiseForm.js","container/routes/routes.js","App.js","serviceWorker.js","store/reducers/postsReducer.js","store/reducers/commentReducer.js","store/reducers/userReducer.js","store/reducers/todoReducer.js","store/reducers/authReducer.js","store/reducers/practisereducer.js","index.js","store/actionscreators/actionTypes.js","store/actionscreators/actionCreators.js"],"names":["Navbar","logoutClick","Swal","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","_this","props","history","replace","nav","localStorage","getItem","react_default","a","createElement","className","Link","to","onClick","this","Component","withRouter","ErrorBoundary","state","error","errinfo","setState","children","PractiseForm","addForm","firstName","lastName","email","favoriteColor","notes","addHandleSubmit","e","preventDefault","console","log","handleSubmit","event","form","Object","objectSpread","defineProperty","target","name","_this2","axios","get","res","editPratise","data","_this3","_this$props","pristine","reset","submitting","onSubmit","Field","component","placeholder","onChange","disabled","reduxForm","connect","initialValues","practise","dispatch","actionCreators","Login","lazy","__webpack_require__","bind","Posts","Promise","all","comments","Users","Todos","Userdetails","Postadd","Logout","Routes","token","approutes","ErrorBoundary_","react","fallback","style","textAlign","Switch","Route","exact","path","Redirect","practiseForm","navbar_navbar","App","routes","Boolean","window","location","hostname","match","initialState","posts","body","id","postsReducer","arguments","length","undefined","action","actionTypes","toConsumableArray","obj","concat","editposts","filter","el","arr","postss","commentReducer","comments_post","slice","users","userReducer","todos","todosReducer","todosData","userId","loading","authReducer","idToken","localId","practiseReducer","assign","editForm","username","website","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","formReducer","auth","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__","LOAD_POSTS","LOAD_COMMENTS_PER_POST","ADD_POST","EDIT_POST","DELETE_POST","GET_USERS","GET_TODOS","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","LOG_OUT","PRACTISE","loadPosts","loadComments","addPost","editPost","deletePost","getUsers","getTodos","authLogout","loginSubmit","editPractiseData","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_1___default","n","toastr__WEBPACK_IMPORTED_MODULE_2__","toastr__WEBPACK_IMPORTED_MODULE_2___default","post","removeItem","password","returnSecureToken","url","expireTime","expirationDate","Date","getTime","expiresIn","setItem","setTimeout","catch","err","toastr"],"mappings":"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","file":"static/js/main.36322f0c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './navbar.css';\r\nimport Swal from 'sweetalert2'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n class Navbar extends Component {\r\n\r\n     logoutClick = () => {\r\n         Swal({\r\n             title: 'Logout?',\r\n             text: \"Are you sure, You want to Logout?\",\r\n             type: 'warning',\r\n             showCancelButton: true,\r\n             confirmButtonColor: '#3085d6',\r\n             cancelButtonColor: '#d33',\r\n             confirmButtonText: 'Yes'\r\n         }).then((result) => {\r\n             if (result.value) {\r\n                 this.props.history.replace(\"/logout\")\r\n             }\r\n         })\r\n     }\r\n\r\n    render(){\r\n        let token = localStorage.getItem('token')\r\n        let nav = null\r\n    \r\n        if(token){\r\n            nav = (\r\n                <ul className=\"header\">\r\n                    <li><Link to=\"/posts\">Posts</Link></li>\r\n                    <li><Link to=\"/add-post\">Add <span className=\"hide\">Post</span></Link></li>\r\n                    <li><Link to=\"/users\">Users</Link></li>\r\n                    <li><Link to=\"/to-dos\">ToDo's</Link></li>\r\n                    <li><Link to=\"/practise\">form</Link></li>\r\n                    <li onClick={this.logoutClick}>Logout</li>\r\n                </ul>\r\n            )\r\n        }\r\n        return (\r\n                <div className=\"head_section\">  \r\n                  {nav}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Navbar);","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary  extends Component {\r\n\r\n    state = {\r\n        error:false\r\n    }\r\n\r\n    componentDidCatch(error,errinfo){\r\n        this.setState({\r\n            error:true\r\n        })\r\n    }\r\n    \r\n    render() {\r\n\r\n        if(this.state.error){\r\n            return (\r\n                <h1>Something went wrong!!</h1>\r\n            )\r\n        } \r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary ;","import React, {Component} from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport * as actionCreators from './../../store/actionscreators/actionCreators'\r\n\r\n\r\nclass PractiseForm extends Component {\r\n  state = {\r\n    addForm:{\r\n      firstName:'',\r\n      lastName:'',\r\n      email:'',\r\n      favoriteColor:'',\r\n      notes:''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    // let editForm = {\r\n    //   firstName:'jonas',\r\n    //   lastName:'miller',\r\n    //   email:'jonasmiller@gmail.com',\r\n    //   favoriteColor:'red',\r\n    //   notes:'thanks'\r\n    // }\r\n    axios.get('http://jsonplaceholder.typicode.com/users/1')\r\n    .then((res) => {\r\n      this.props.editPratise(res.data)\r\n      // let editForm = {\r\n      //   firstName:res.data.name,\r\n      //   lastName:res.data.username,\r\n      //   email:res.data.email,\r\n      //   favoriteColor:'ff0000',\r\n      //   notes:res.data.website\r\n      // }\r\n      // console.log(editForm)\r\n      // this.setState({addForm:editForm})\r\n    })\r\n  }\r\n\r\n  addHandleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(this.state.addForm)\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    let form = {\r\n      ...this.state.addForm,\r\n      [event.target.name]:event.target.value\r\n    }\r\n    this.setState({addForm:form})\r\n  }\r\n\r\n  render(){\r\n    const { pristine, reset, submitting } = this.props\r\n    return (\r\n      <form onSubmit={(e) => this.addHandleSubmit(e)}>\r\n        <div>\r\n          <label>First Name</label>\r\n          <div>\r\n            <Field\r\n              name=\"firstName\"\r\n              component=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              onChange={(e) => this.handleSubmit(e)}\r\n              value={this.state.addForm.firstName}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>Last Name</label>\r\n          <div>\r\n            <Field\r\n              name=\"lastName\"\r\n              component=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              value={this.state.addForm.lastName}\r\n              onChange={(e) => this.handleSubmit(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>Email</label>\r\n          <div>\r\n            <Field\r\n              name=\"email\"\r\n              component=\"input\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={this.state.addForm.email}\r\n              onChange={(e) => this.handleSubmit(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* <div>\r\n          <label>Sex</label>\r\n          <div>\r\n            <label>\r\n              <Field\r\n                name=\"sex\"\r\n                component=\"input\"\r\n                type=\"radio\"\r\n                value={this.state.addForm.sex}\r\n                onChange={(e) => this.handleSubmit(e)}\r\n              />{' '}\r\n              Male\r\n            </label>\r\n          </div>\r\n        </div> */}\r\n        <div>\r\n          <label>Favorite Color</label>\r\n          <div>\r\n            <Field name=\"favoriteColor\" onChange={(e) => this.handleSubmit(e)} value={this.state.addForm.favoriteColor} component=\"select\">\r\n              <option />\r\n              <option value=\"ff0000\">Red</option>\r\n              <option value=\"00ff00\">Green</option>\r\n              <option value=\"0000ff\">Blue</option>\r\n            </Field>\r\n          </div>\r\n        </div>\r\n        {/* <div>\r\n          <label htmlFor=\"employed\">Employed</label>\r\n          <div>\r\n            <Field\r\n              name=\"employed\"\r\n              id=\"employed\"\r\n              component=\"input\"\r\n              type=\"checkbox\"\r\n              value={this.state.addForm.employed}\r\n              onChange={(e) => this.handleSubmit(e)}\r\n            />\r\n          </div>\r\n        </div> */}\r\n        <div>\r\n          <label>Notes</label>\r\n          <div>\r\n            <Field name=\"notes\" component=\"textarea\" onChange={(e) => this.handleSubmit(e)} value={this.state.addForm.notes} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" disabled={pristine || submitting}>\r\n            Submit\r\n          </button>\r\n          <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n            Clear Values\r\n          </button>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n}\r\n\r\nPractiseForm = reduxForm({\r\n  form: 'PractiseForm'  // a unique identifier for this form\r\n})(PractiseForm)\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    initialValues:state.practise\r\n  }\r\n}\r\n\r\n// var editForm = {\r\n//   firstName:\"sdfsf\",\r\n//   lastName:\"Sdfsdfsf\",\r\n//   email:\"sdfsdf@gmail.com\",\r\n//   favoriteColor:'ff0000',\r\n//   notes:\"thanks\"\r\n// }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    editPratise:(data) => dispatch(actionCreators.editPractiseData(data))\r\n  }\r\n}\r\n\r\nPractiseForm = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps               // bind account loading action creator\r\n)(PractiseForm)\r\n\r\nexport default PractiseForm;\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     initialValues:state.practise\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     editPratise:(data) => actionCreators.editPractiseData(data)\r\n//   }\r\n// }\r\n\r\n// // PractiseForm = reduxForm({\r\n// //   form:'simple'\r\n// // })\r\n\r\n// PractiseForm = connect(mapStateToProps,mapDispatchToProps)(PractiseForm)\r\n\r\n// export default reduxForm({\r\n//   form:'simple'\r\n// }) (PractiseForm);","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch, Route, Redirect} from 'react-router-dom';\r\n\r\n// import Posts from '../posts/Posts';\r\n// import comments from '../comments/comments';\r\n// import Users from '../users/Users';\r\n// import Userdetails from '../userdetails/Userdetails';\r\n// import Todos from '../todos/Todos';\r\n// import Postadd from '../../component/postadd/Postadd';\r\nimport Navbar  from '../../component/navbar/navbar';\r\n// import Logout from '../logout/Logout';\r\n// import {connect} from 'react-redux';\r\nimport ErrorBoundary from './../ErrorBoundaries/ErrorBoundary '\r\n// import Practise from '../Practise/Practise';\r\nimport practiseForm from '../../component/practiseForm/practiseForm';\r\nconst Login = lazy(() => import('../Login/Login'));\r\nconst Posts = lazy(() => import('../posts/Posts'));\r\nconst comments = lazy(() => import('../comments/comments'));\r\nconst Users = lazy(() => import('../users/Users'));\r\nconst Todos = lazy(() => import('../todos/Todos'));\r\nconst Userdetails = lazy(() => import('../userdetails/Userdetails'));\r\nconst Postadd = lazy(() => import('../../component/postadd/Postadd'));\r\nconst Logout = lazy(() => import('../logout/Logout'));\r\n// import Login from '../Login/Login';\r\n\r\n\r\nclass Routes extends Component {\r\n\r\n   \r\n    render() {\r\n        let token = localStorage.getItem('token')\r\n        let approutes = (\r\n            <ErrorBoundary>\r\n                <Suspense fallback={<div style={{textAlign:'center'}}>Loading...</div>}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Login} />\r\n                        <Redirect to=\"/\"/>\r\n                    </Switch>\r\n                </Suspense>\r\n            </ErrorBoundary>\r\n        )\r\n        if(token) {\r\n            approutes = (\r\n                <Suspense fallback={<div style={{textAlign:'center'}}>Loading...</div>}>\r\n                    <Switch>\r\n                        <Route path=\"/posts\" component={Posts} />\r\n                        <Route path=\"/add-post\" component={Postadd} />\r\n                        <Route exact path=\"/users/:id\" component={Userdetails} />\r\n                        <Route path=\"/users\" component={Users} />\r\n                        <Route path=\"/logout\" component={Logout} />\r\n                        <Route path=\"/to-dos\" component={Todos} />\r\n                        <Route path=\"/practise\" component={practiseForm} />\r\n                        <Route path=\"/edit-post/:id\" component={Postadd} />\r\n                        <Route exact path=\"/post/:id\" component={comments} />\r\n                        <Redirect to=\"/posts\"/>\r\n                    </Switch>   \r\n                </Suspense>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar  />\r\n                <Switch>\r\n                    {approutes}\r\n                    {/* <Route render={() => <h1>Page not Found?</h1>}/> */}\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         isAuthenticated:state.auth.token !== null\r\n//     }\r\n// }\r\n\r\nexport default Routes","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Routes from './container/routes/routes';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Routes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from './../actionscreators/actionTypes';\r\n\r\nconst initialState = {\r\n    posts: [{\r\n            title: \"test A\",\r\n            body: \"body A\",\r\n            id: 1\r\n        },\r\n        {\r\n            title: \"test B\",\r\n            body: \"body B\",\r\n            id: 2\r\n        },\r\n        {\r\n            title: \"test C\",\r\n            body: \"body C\",\r\n            id: 3\r\n        },\r\n        {\r\n            title: \"test D\",\r\n            body: \"body D\",\r\n            id: 4\r\n        },\r\n        {\r\n            title: \"test E\",\r\n            body: \"body E\",\r\n            id: 5\r\n        }\r\n    ]\r\n}\r\n\r\nexport const postsReducer = (state = initialState.posts, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_POSTS:\r\n            return [...state]\r\n\r\n        case actionTypes.ADD_POST:\r\n            let obj = {\r\n                ...action.data,\r\n                id:state.length + 1\r\n            }\r\n            let posts = state.concat(obj)\r\n            return [...posts]\r\n            // let index = state.findIndex(el => el.id === action.data.id);\r\n            // if (index === -1) {\r\n            //     return [...state, action.data]\r\n            // } else {\r\n            //     return state\r\n            // }\r\n\r\n\r\n        case actionTypes.EDIT_POST:\r\n            var editposts = [...state].filter(el => el.id !== action.data.id)\r\n            var arr = [...editposts,action.data]\r\n            return [\r\n                ...arr\r\n            ]\r\n            // var editposts = [...state].filter(el => el !== action.data.id)\r\n            // var arr = [...editposts, action.data]\r\n            // let indexe = arr.findIndex(el => el.id === action.data.id);\r\n            // if (indexe === -1) {\r\n            //     return [...arr, action.data]\r\n            // } else {\r\n            //     return arr\r\n            // }\r\n\r\n        case actionTypes.DELETE_POST:\r\n             var postss = [...state].filter(el => el.id !== action.data)\r\n             return [...postss]\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default postsReducer;\r\n\r\n// export const postsReducer = (state = initialState.posts, action) => {\r\n//     switch (action.type) {\r\n//         case actionTypes.LOAD_POSTS:\r\n//             let posts = action.data.slice()\r\n//             return [...posts]\r\n\r\n//         case actionTypes.ADD_POST:\r\n//             let index = state.findIndex(el => el.id === action.data.id);\r\n//             if(index === -1){\r\n//                 return [...state,action.data]\r\n//             } else {\r\n//                 return state\r\n//             }\r\n\r\n//         case actionTypes.EDIT_POST:\r\n//             var editposts = [...state].filter(el => el !== action.data.id)\r\n//             var arr = [...editposts,action.data]\r\n//             let indexe = arr.findIndex(el => el.id === action.data.id);\r\n//             if(indexe === -1){\r\n//                 return [...arr,action.data]\r\n//             } else {\r\n//                 return arr\r\n//             }\r\n\r\n//         default:\r\n//             return state\r\n//     }\r\n// }","import * as actionTypes from './../actionscreators/actionTypes';\r\n\r\nconst initialState = {\r\n    comments: []\r\n}\r\n\r\n\r\nexport const commentReducer = (state = initialState.comments, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_COMMENTS_PER_POST:\r\n            let comments_post = action.data.slice()\r\n            return [...comments_post].slice(0, 50)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default commentReducer;","import * as actionTypes from './../actionscreators/actionTypes';\r\n\r\nconst initialState = {\r\n    users: []\r\n}\r\n\r\n\r\nexport const userReducer = (state = initialState.users, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_USERS:\r\n            let users = action.data.slice()\r\n            return [...users]\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","import * as actionTypes from './../actionscreators/actionTypes';\r\n\r\nconst initialState = {\r\n    todos: []\r\n}\r\n\r\n\r\nexport const todosReducer = (state = initialState.todos, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_TODOS:\r\n            let todosData = action.data.slice(0,15)\r\n            return [...todosData]\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todosReducer;","import * as actionTypes from './../actionscreators/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId:null,\r\n    error:null,\r\n    loading:null\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n        return {\r\n            ...state,\r\n            error:null,\r\n            loading:true\r\n        }\r\n\r\n        case actionTypes.AUTH_SUCCESS:\r\n        return {\r\n            ...state,\r\n            token:action.data.idToken,\r\n            userId:action.data.localId,\r\n            error:null,\r\n            loading:false\r\n        }\r\n\r\n        case actionTypes.AUTH_FAIL:\r\n        return {\r\n            loading:false,\r\n            error:action.data\r\n        }\r\n\r\n        case actionTypes.LOG_OUT:\r\n        return {\r\n            ...state,\r\n            token:null,\r\n            userId:null\r\n        }\r\n           \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","import * as actionTypes from './../actionscreators/actionTypes';\r\n\r\nconst initialState = {\r\n    practise: {}\r\n}\r\n\r\n\r\nexport const practiseReducer = (state = initialState.practise, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PRACTISE:\r\n            let obj = Object.assign({}, action.data)\r\n            let editForm = {\r\n                firstName: obj.name,\r\n                lastName: obj.username,\r\n                email: obj.email,\r\n                favoriteColor: 'ff0000',\r\n                notes: obj.website\r\n            }\r\n            return {...editForm}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default practiseReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport { createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { postsReducer } from './store/reducers/postsReducer';\r\nimport { commentReducer } from './store/reducers/commentReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { userReducer } from './store/reducers/userReducer';\r\nimport { todosReducer } from './store/reducers/todoReducer';\r\nimport { authReducer } from './store/reducers/authReducer';\r\nimport { practiseReducer } from './store/reducers/practisereducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    posts:postsReducer,\r\n    comments:commentReducer,\r\n    form:formReducer,\r\n    users:userReducer,\r\n    todos:todosReducer,\r\n    auth:authReducer,\r\n    practise:practiseReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n))\r\n\r\nconst app = (\r\n    <Provider store={store} >\r\n        <Router>\r\n            <App/>\r\n        </Router>\r\n    </Provider>\r\n)\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const LOAD_POSTS = \"LOAD_POSTS\";\r\nexport const LOAD_COMMENTS_PER_POST = \"LOAD_COMMENTS_PER_POST\";\r\n\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const EDIT_POST = \"EDIT_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_TODOS = \"GET_TODOS\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\n\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const PRACTISE = \"PRACTISE\";\r\n\r\n\r\n\r\n\r\n\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios';\r\n\r\nimport toastr from 'toastr'\r\n\r\nexport const loadPosts = (data) => {\r\n    return {\r\n        type: actionTypes.LOAD_POSTS,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const loadComments = (data) => {\r\n    return {\r\n        type: actionTypes.LOAD_COMMENTS_PER_POST,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const addPost = (post) => {\r\n    return {\r\n        type: actionTypes.ADD_POST,\r\n        data: post\r\n    }\r\n}\r\n\r\nexport const editPost = (post) => {\r\n    return {\r\n        type: actionTypes.EDIT_POST,\r\n        data: post\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => {\r\n    return {\r\n        type: actionTypes.DELETE_POST,\r\n        data: id\r\n    }\r\n}\r\n\r\nexport const getUsers = (users) => {\r\n    return {\r\n        type: actionTypes.GET_USERS,\r\n        data: users\r\n    }\r\n}\r\n\r\nexport const getTodos = (todos) => {\r\n    return {\r\n        type: actionTypes.GET_TODOS,\r\n        data: todos\r\n    }\r\n}\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        data: error\r\n    }\r\n}\r\n\r\nexport const authLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type:actionTypes.LOG_OUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expireTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(authLogout());\r\n        }, expireTime * 1000);\r\n    }\r\n}\r\n\r\nexport const loginSubmit = (data, type) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        let form = {\r\n            email: data.email,\r\n            password: data.password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = \"\"\r\n        if (type === \"SignUp\") {\r\n            url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyCAisoiMSdlrKOqBAxJN-cmfc8AAT7f7Ug\"\r\n        } else {\r\n            url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyCAisoiMSdlrKOqBAxJN-cmfc8AAT7f7Ug\"\r\n        }\r\n\r\n        axios.post(url, form)\r\n            .then((res) => {\r\n                const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000)\r\n                localStorage.setItem('token', res.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', res.data.localId);\r\n                dispatch(authSuccess(res.data))\r\n                dispatch(checkAuthTimeout(res.data.expiresIn))\r\n\r\n            }).catch((err) => {\r\n                toastr.error(\"User Already Exists \" + err)\r\n                dispatch(authFail(err))\r\n            })\r\n    }\r\n}\r\n\r\nexport const editPractiseData = (data) => {\r\n    return {\r\n        type: actionTypes.PRACTISE,\r\n        data:data\r\n    }\r\n}"],"sourceRoot":""}