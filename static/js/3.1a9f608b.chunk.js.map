{"version":3,"sources":["component/spinner/Spinner.js","component/post/Post.js","container/posts/Posts.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_loader_spinner__WEBPACK_IMPORTED_MODULE_1__","react_loader_spinner__WEBPACK_IMPORTED_MODULE_1___default","Spinner","a","createElement","type","color","height","width","Post","props","react_default","className","onClick","edit","delete","Link","to","id","title","Posts","deletePost","_this","toastr","success","editPost","history","push","_this2","this","axios","get","then","res","getPosts","data","slice","_this3","posts","map","el","Post_Post","Object","assign","key","Component","connect","state","isAuth","auth","token","dispatch","bindActionCreators","actionCreators"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAgBeE,IAbC,WACZ,OACIJ,EAAAK,EAAAC,cAAA,WACIN,EAAAK,EAAAC,cAACH,EAAAE,EAAD,CACCE,KAAK,OACLC,MAAM,QACNC,OAAO,MACPC,MAAM,qNCNNC,EAAO,SAACC,GACjB,OACIC,EAAAR,EAAAC,cAAA,OAAKQ,UAAU,aACfD,EAAAR,EAAAC,cAAA,KAAGS,QAASH,EAAMI,KAAMF,UAAU,gBAClCD,EAAAR,EAAAC,cAAA,KAAGS,QAASH,EAAMK,OAAQH,UAAU,iBACpCD,EAAAR,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAI,SAAWP,EAAMQ,IACvBP,EAAAR,EAAAC,cAAA,OAAKQ,UAAU,QACXD,EAAAR,EAAAC,cAAA,UAAKM,EAAMS,OACXR,EAAAR,EAAAC,cAAA,SAAIM,EAAMS,8CCGpBC,6MASFC,WAAa,SAACH,GACVI,EAAKZ,MAAMW,WAAWH,GACtBK,IAAOC,QAAQ,qBASnBC,SAAW,SAACP,GACRI,EAAKZ,MAAMgB,QAAQC,KAAK,cAAgBT,uFAnBzB,IAAAU,EAAAC,KACfC,IAAMC,IAAI,6CACRC,KAAK,SAACC,GACHL,EAAKlB,MAAMwB,SAASD,EAAIE,KAAKC,MAAM,EAAG,wCAmBtC,IAAAC,EAAAR,KACDS,EAAQ3B,EAAAR,EAAAC,cAACF,EAAA,EAAD,MAOZ,OALG2B,KAAKnB,MAAM4B,QACVA,EAAQT,KAAKnB,MAAM4B,MAAMC,IAAI,SAACC,GAC1B,OAAO7B,EAAAR,EAAAC,cAACqC,EAADC,OAAAC,OAAA,CAAM7B,KAAM,kBAAMuB,EAAKZ,SAASe,EAAGtB,KAAKH,OAAQ,kBAAMsB,EAAKhB,WAAWmB,EAAGtB,KAAK0B,IAAKJ,EAAGtB,IAAQsB,OAIzG7B,EAAAR,EAAAC,cAAA,OAAKQ,UAAU,aACV0B,UAlCGO,aAwDLC,sBAhBS,SAAAC,GACpB,MAAO,CACHT,MAAMS,EAAMT,MACZU,OAAOD,EAAME,KAAKC,QAIC,SAAAC,GACvB,OAAOC,YAAmB,CACtBlB,SAAS,SAACC,GAAD,OAAUgB,EAASE,IAAyBlB,KACrDd,WAAW,SAACH,GAAD,OAAQiC,EAASE,IAA0BnC,MACxDiC,IAKSL,CAA8C1B","file":"static/js/3.1a9f608b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div>\r\n            <Loader \r\n             type=\"Oval\"\r\n             color=\"black\"\r\n             height=\"100\"\t\r\n             width=\"100\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './Post.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Post = (props) => {\r\n    return (\r\n        <div className=\"card-icon\">\r\n        <i onClick={props.edit} className=\"fas fa-edit\"></i>\r\n        <i onClick={props.delete} className=\"fas fa-trash\"></i>\r\n        <Link to={\"/post/\" + props.id}>\r\n            <div className=\"card\">\r\n                <h1>{props.title}</h1>\r\n                <p>{props.title}</p>\r\n            </div>\r\n        </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from '../../../node_modules/redux';\r\n\r\nimport * as actionCreators from './../../store/actionscreators/actionCreators'\r\n\r\nimport axios from 'axios';\r\nimport { Post } from '../../component/post/Post';\r\n\r\nimport './Posts.css'\r\nimport Spinner from '../../component/spinner/Spinner';\r\n\r\nimport toastr from 'toastr'\r\n\r\nclass Posts extends Component {\r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://jsonplaceholder.typicode.com/posts\")\r\n         .then((res) => {\r\n             this.props.getPosts(res.data.slice(0, 10))\r\n         })\r\n    }\r\n\r\n    deletePost = (id) => {\r\n        this.props.deletePost(id)\r\n        toastr.success(\"Post Deleted!!\")\r\n        // axios.delete(\"http://jsonplaceholder.typicode.com/posts/\" + id)\r\n        //  .then((res) => {\r\n        //     toastr.success(\"Post Deleted!!\")\r\n        //  }).catch((err) => {\r\n        //      toastr.error(\"Post deleted fail!!\")\r\n        //  })\r\n    }\r\n\r\n    editPost = (id) => {\r\n        this.props.history.push('/edit-post/' + id)\r\n    }\r\n\r\n    render() {\r\n        let posts = <Spinner />\r\n\r\n        if(this.props.posts) {\r\n            posts = this.props.posts.map((el) => {\r\n                return <Post edit={() => this.editPost(el.id)} delete={() => this.deletePost(el.id)} key={el.id} {...el} />\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                {posts}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts:state.posts,\r\n        isAuth:state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        getPosts:(data) => dispatch(actionCreators.loadPosts(data)),\r\n        deletePost:(id) => dispatch(actionCreators.deletePost(id))\r\n    },dispatch)\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Posts);"],"sourceRoot":""}