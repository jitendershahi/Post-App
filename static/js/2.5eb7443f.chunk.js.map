{"version":3,"sources":["container/Login/Login.js"],"names":["Login","state","loginForm","email","password","isSignup","handleValue","event","body","Object","C_Users_shanky_Desktop_opifex_Post_App_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_this","C_Users_shanky_Desktop_opifex_Post_App_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","name","value","setState","submitLogin","preventDefault","action","props","auth","changeMode","prevState","_this2","this","redirect","localStorage","getItem","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","className","type","onChange","placeholder","onClick","Component","connect","isAuth","token","dispatch","data","actionCreators"],"mappings":"qOAOMA,6MAEFC,MAAQ,CACJC,UAAU,CACNC,MAAM,GACNC,SAAS,IAEbC,UAAS,KAGbC,YAAc,SAACC,GACX,IAAIC,EAAIC,OAAAC,EAAA,EAAAD,CAAA,GACDE,EAAKV,MAAMC,UADVO,OAAAG,EAAA,EAAAH,CAAA,GAEHF,EAAMM,OAAOC,KAAMP,EAAMM,OAAOE,QAErCJ,EAAKK,SAAS,CAACd,UAAUM,OAG7BS,YAAc,SAACV,GACXA,EAAMW,iBACN,IAAIC,EAASR,EAAKV,MAAMI,SAAW,SAAW,SAC9CM,EAAKS,MAAMC,KAAKV,EAAKV,MAAMC,UAAUiB,MAGzCG,WAAa,WACTX,EAAKK,SAAS,SAAAO,GACV,MAAO,CACHlB,UAAWkB,EAAUlB,qFAKxB,IAAAmB,EAAAC,KAEDC,EAAW,KA4Bf,OA1BIA,EAHQC,aAAaC,QAAQ,SAGlBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,WAGpBJ,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,QAAQrB,KAAK,QAAQsB,SAAU,SAAC7B,GAAD,OAAWiB,EAAKlB,YAAYC,IAAQQ,MAAOU,KAAKxB,MAAMC,UAAUC,MAAO+B,UAAU,eAAeG,YAAY,iBAE3JR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWrB,KAAK,WAAWsB,SAAU,SAAC7B,GAAD,OAAWiB,EAAKlB,YAAYC,IAAQQ,MAAOU,KAAKxB,MAAMC,UAAUE,SAAU8B,UAAU,eAAeG,YAAY,cAEpKR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASG,QAAS,SAAC/B,GAAD,OAAWiB,EAAKP,YAAYV,IAAQ2B,UAAU,SAA7E,UACAL,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASG,QAASb,KAAKH,WAAYY,UAAU,SAA1D,aAA8ET,KAAKxB,MAAMI,SAAY,SAAW,YAaxHwB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACfL,EAAAC,EAAAC,cAAA,sBAAeN,KAAKxB,MAAMI,SAAY,SAAW,QAAjD,KACQwB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2CACdR,YAnELa,aAuFLC,sBAZS,SAACvC,GACrB,MAAO,CACHwC,OAA4B,OAArBxC,EAAMoB,KAAKqB,QAIC,SAAAC,GACvB,MAAO,CACHtB,KAAM,SAACuB,EAAMT,GAAP,OAAgBQ,EAASE,IAA2BD,EAAMT,OAIzDK,CAA6CxC","file":"static/js/2.5eb7443f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Login.css'\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport * as actionCreators from './../../store/actionscreators/actionCreators'\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        loginForm:{\r\n            email:'',\r\n            password:''\r\n        },\r\n        isSignup:false\r\n    }\r\n\r\n    handleValue = (event) => {\r\n        let body = {\r\n            ...this.state.loginForm,\r\n            [event.target.name]:event.target.value\r\n        }\r\n        this.setState({loginForm:body})\r\n    }\r\n\r\n    submitLogin = (event) => {\r\n        event.preventDefault()\r\n        let action = this.state.isSignup ? \"SignUp\" : \"SignIn\"\r\n        this.props.auth(this.state.loginForm,action)\r\n    }\r\n\r\n    changeMode = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isSignup: !prevState.isSignup\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        let token = localStorage.getItem('token')\r\n        let redirect = null\r\n        if(token){\r\n            redirect = <Redirect to=\"/posts\" />\r\n        } else {\r\n            redirect = (\r\n                <form >\r\n                <div className=\"form-group\">\r\n                    <label >Email address</label>\r\n                    <input type=\"email\" name=\"email\" onChange={(event) => this.handleValue(event)} value={this.state.loginForm.email} className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label >Password</label>\r\n                    <input type=\"password\" name=\"password\" onChange={(event) => this.handleValue(event)} value={this.state.loginForm.password} className=\"form-control\" placeholder=\"Password\" />\r\n                </div>\r\n                <div className=\"custom-button\">\r\n                    <button type=\"submit\" onClick={(event) => this.submitLogin(event)} className=\"buton\">Submit</button>\r\n                    <button type=\"button\" onClick={this.changeMode} className=\"buton\">Switch To {(this.state.isSignup) ? \"SignIn\" : \"SignUp\"}</button>\r\n                </div>\r\n            </form>\r\n            )\r\n        }\r\n\r\n        // let style = {\r\n        //     margin:'110px auto',\r\n        //     background:'#e6e6e6',\r\n        //     width:'50%'\r\n        // }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <h2>Post App {(this.state.isSignup) ? \"SignUp\" : \"Login\"} </h2>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                        {redirect}\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth:state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        auth: (data, type) => dispatch(actionCreators.loginSubmit(data, type))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"],"sourceRoot":""}